HTML是什麼？
    HTML 的全名是 HyperText Markup Language（超文本標記語言），它主要用來定義網頁的結構和內容。
    想像一下 HTML 就像是建造房子的框架和結構，決定哪些部分是標題、段落、圖片、鏈接等。
基本框架
<!DOCTYPE html>
    文檔類型聲明，用於告訴瀏覽器這個HTML文件使用的是哪種HTML標準。
    用途：
        1.標識HTML版本：<!DOCTYPE html> 指定了文檔使用HTML5標準。這是目前最新的HTML標準，支持許多現代特性和API。
        2.啟用標準模式：這個聲明使瀏覽器進入“標準模式”，確保網頁在不同瀏覽器中的顯示效果一致，避免了某些瀏覽器的怪異模式（quirks mode），從而提高了網頁的兼容性。
HTML元素
    <html>、<head> 和 <body>
        HTML文檔的基本結構標籤，各自扮演著不同的角色。
        1. <html>
            用途：標識整個HTML文檔的開始，並告訴瀏覽器這是一個HTML文件。它是所有其他元素的根元素。
        2. <head>
            用途：包含有關文檔的元數據（metadata），如標題、字元集、樣式表、腳本等。這些信息不會顯示在頁面內容中，但對瀏覽器和搜尋引擎等是重要的。
        3. <body>
            用途：包含文檔的可見內容，所有用戶在瀏覽器中看到的內容，如文本、圖片、按鈕等，都放在這裡。
        小結
            <!DOCTYPE html>：指定文檔類型。
            <html>：根元素，包裹整個HTML文檔。
            <head>：包含元數據和其他信息。
            <body>：包含所有可見內容。
            這種結構是撰寫HTML文檔的基本框架。
    <h1>、<p>和<br>
        <h1>：這是一個標題標籤，h1表示最大號的標題。每個標籤都有自己基礎設定的大小，而最小為<h6>
        <p>：這是一個段落標籤，用來表示文字段落。
        <br>：這是一個空元素，並且是一個沒有結束標籤的空元素，用來換行用。
            <hr>：標籤定義 HTML 頁面中的主題中斷，並且通常顯示為水平規則。用於分隔 HTML 頁面中的內容
            <pre>：預先格式化文字。元素內的文字<pre>以固定寬度字體（通常是 Courier）顯示，並保留空格和換行符。
    <div>、<nav>
        <div>：區塊元素，用作其他 HTML 元素的容器。它佔用所有可用寬度，並且前後帶有換行符。
            居中對齊 <div>：如果您的<div>元素不是 100% 寬，並且想要將其居中對齊，請將 CSS margin屬性設為 auto。
            並排對齊 <div>：CSSfloat屬性原本不是用於並排 <div>對齊元素，但多年來一直用於此目的。
                <style>
                .mycontainer {
                width:100%;
                overflow:auto;
                }
                .mycontainer div {
                width:33%;
                float:left;
                }
                </style>
            更多內容：https://www.w3schools.com/html/html_div.asp
        <nav>：定義一組導航鏈接。請注意，並非文件的所有連結都應該位於元素內<nav>。此 <nav>元素僅適用於導航連結的主要區塊。瀏覽器（例如​​殘障使用者的螢幕閱讀器）可以使用此元素來決定是否省略此內容的初始呈現。
    
    更多語意：https://www.w3schools.com/html/html5_semantic_elements.asp
    區塊和內聯元素：https://www.w3schools.com/html/html_blocks.asp
HTML屬性
    <href><src><width><height><alt><style><lang><title>
    超連結：
        href的屬性指定 <a>連結轉到的頁面的 URL

    圖片：
        src的屬性指定 <img>要顯示的影像的路徑
        width和屬性height提供<img>圖像的尺寸信息
        alt的屬性為 <img>圖像提供替代文本
        舉例：<img alt="Read Lantern logo" src="images/rl_logo.png"/ width="500" height="600">
    樣式：
        此style屬性用於為元素添加樣式，例如顏色、字體、大小等
        <tagname style="property:value;">
        background-color 將頁面的背景顏色設定為粉藍色
        color 定義HTML元素的文字顏色
        font-family：屬性定義HTML元素所使用的字型
        font-size：屬性定義HTML元素的文字大小
        text-align：屬性定義HTML元素的水平文字對齊方式


    
    lang標籤的屬性聲明<html>網頁的語言
    該title屬性定義了有關元素的一些額外信息  
HTML文字格式
    <b>：粗體文字。粗體文本，沒有任何額外的重要性
    <strong>：重要文字。非常重要的文字。裡面的內容通常以粗體顯示。
    <i>：斜體文本。以替代的語氣或語氣定義文字的一部分。裡面的內容通常以斜體顯示。
    <em>：強調文字。強調文字。裡面的內容通常以斜體顯示。提示：螢幕閱讀器會<em> 使用語言重音來強調單字的發音。
    <mark>：標記文字。應標記或反白的文字。
    <small>：較小的文字。
    <del>：刪除文字。已從文件中刪除的文字。瀏覽器通常會在刪除的文字中劃一條線。
    <ins>：插入的文字。已插入到文件中的文字。瀏覽器通常會為插入的文字加上底線
    <sub>：下標文字。下標文字出現在法線下方半個字元處，有時會以較小的字體呈現。下標文字可用於化學式，例如 H 2 O
    <sup>：上標文字。顯示在正常線上方半個字符，有時以較小的字體呈現。上標文字可用於腳註，例如 WWW [1]
HTML引文和引文元素
    <blockquote>：從另一個來源引用的部分。
    <q>：引文兩邊插入引號>。
    <abbr>：標記縮寫可以為瀏覽器、翻譯系統和搜尋引擎提供有用的信息。
    提示：當您將滑鼠懸停在元素上時，使用全域標題屬性可顯示縮寫詞/首字母縮寫的描述。 
    <address>：文件或文章的作者/擁有者的聯絡資訊。文字通常以斜體<address>呈現， 瀏覽器總是會在元素前後加上換行符。
    <cite>：創意作品的標題。文字通常以斜體呈現
    <bdo>：用於覆寫目前文字方向
註解
    <!-- Write your comments here -->
顏色
    background-color：背景的顏色
    color：文字的顏色
    border:？px solid ？：方框粗細與顏色
    
    在 HTML 中，也可以使用 RGB 值、HEX 值、HSL 值、RGBA 值和 HSLA 值來指定顏色，以紅色為例：
    RGB(255, 99, 71)
    #ff6347
    hsl(9, 100%, 64%)

    hsl(9, 100%, 64%, 0.5) 增加了透明度
    顏色
        RGB
            rgb(紅色指數, 綠色指數, 藍色指數)
            rgb(255, 255, 255) 為白 rgb(0, 0, 0)

        十六進位
            #RRGGBB
            由最低的00到最高的ff，0123456789abcdef這16位數字來進位

        HSL
            HSL代表色調、飽和度和亮度，HSLA是具有Alpha通道（不透明度）的HSL的擴展。
            hsl(色調,飽和度,亮度)
            色調是色輪上從 0 到 360 的一個度數。
            飽和度是一個百分比值。 0% 表示灰度，100% 表示全色。
            亮度也是一個百分比值。 0% 為黑色，100% 為白色。


<link> 
    是HTML中的一個標籤，用於在文檔中鏈接到外部資源，通常用於連接CSS樣式表，但也可以用於其他類型的資源。

    用途：
        連接CSS樣式表：最常見的用途是引入外部CSS文件，以便為HTML頁面應用樣式。
        其他資源：可以用於鏈接圖標、網頁的RSS源、字型等。
    組成部分：
         rel：指定與被鏈接資源的關係。例如，rel="stylesheet" 表示這是一個樣式表。
        href：指定資源的URL或路徑。例如，href="css/style.css" 指向一個CSS文件。
        type：指定資源的類型。對於CSS，通常設置為 type="text/css"（在HTML5中可選）。
        media：可選屬性，用於指定樣式表應用的媒介類型，例如 media="screen" 只在屏幕上應用。

meta標籤
    提供關於HTML文件的元資料（metadata）
        1.字元集：指定文件使用的字元編碼，例如 <meta charset="UTF-8">。
        2.頁面描述：提供網頁的簡短描述，通常用於搜尋引擎結果頁，例如 <meta name="description" content="網頁的描述">。
        3.關鍵詞：指定與網頁相關的關鍵詞，幫助搜尋引擎理解內容（雖然現在許多搜尋引擎不再重視此標籤）。
        4.作者資訊：標識網頁的作者，例如 <meta name="author" content="作者姓名">。
        5.視口設定：在響應式設計中，設置視口屬性，例如 <meta name="viewport" content="width=device-width, initial-scale=1.0">。
charset 字元集  
    “字元集”（Character Set）的縮寫，指的是一種用於將字元映射到特定數值的編碼方式。字元集定義了電腦如何將數字表示的內容轉換為可讀的字元。
    <meta charset="UTF-8">意思是指定文檔的字元編碼為 UTF-8
    UTF-8 是一種能夠表示世界上幾乎所有字元的編碼方式，包括中文、日文、韓文等多種語言字元。
    更多詳情
        用途：
            1.確保正確顯示：透過指定字元編碼，瀏覽器能夠正確解讀和顯示頁面中的文字，避免出現亂碼。
            2.支持多語言：UTF-8 支持多種語言和符號，使得網頁能夠被全球用戶訪問，而不必擔心字元顯示問題。
            3.SEO 優化：使用統一的編碼方式可以提高搜尋引擎對頁面內容的理解，從而有助於搜尋引擎優化（SEO）。
        如果沒有使用
            1.亂碼：瀏覽器可能使用預設字元編碼（如 ISO-8859-1 或其他編碼）來解析頁面內容，導致文本顯示為亂碼，特別是中文或其他非拉丁字母的字元。
            2.多語言支持問題：如果網頁包含多種語言字元，缺少字元編碼聲明可能會使某些字元無法正確顯示，從而影響用戶體驗。
            3.搜尋引擎問題：搜尋引擎在索引網頁內容時，可能因為字元編碼不明確而無法正確解析，從而影響網頁的可見性和排名。
            4.用戶體驗差：訪問者可能會因為無法正確閱讀網頁內容而感到困惑或不滿，從而降低他們對網站的信任感。
        其他常用的字元集
            1.ISO-8859-1（又稱 Latin-1）：主要用於西歐語言。
            2.Windows-1252：與 ISO-8859-1 類似，但增加了額外的字元，常用於 Windows 系統。
            3.UTF-16：支持所有 Unicode 字元，通常用於某些特定的應用和環境。
            4.ASCII：只包含基本的英文字元（0-127），通常用於簡單的文本文件。
            5.GB2312 / GBK / GB18030：用於簡體中文字元的編碼。
連接CSS
    使用 HTMLstyle屬性進行內聯樣式設定
    使用 HTML<style>元素定義內部 CSS
    使用 HTML<link>元素引用外部 CSS 文件
    使用 HTML<head>元素儲存 <style> 和 <link> 元素
    
    使用 CSS color屬性設定文字顏色
    font-family使用文字字型的CSS屬性
    使用 CSS font-size屬性設定文字大小
    使用 CSS border屬性作為邊框
    使用 CSS padding屬性設定邊框內的空間
    margin對邊框外的空間使用 CSS屬性
網站建立步驟(個人見解)
    1.先建立html:5，並在head裡設定好title、link、keyword等。
    2.觀察與構思網頁的分區，並從頭到尾從上到下分隔開來。
      如果有左右分隔的區塊，以在某區塊再次分割的方式做出。
    3.幫分隔得區塊取名，header、div、article、footer沒有差距。
      以自己方便修改、好懂為主，並在後面設立ID以更好辨認

CSS 是什麼？
    CSS 的全名是 Cascading Style Sheets（層疊樣式表），它主要用來設計和美化網頁的外觀。
    你可以用 CSS 改變文字的顏色、大小、背景顏色、間距等。CSS 就像是裝飾這個房子的油漆、家具和裝飾品。

Bootstrap 是什麼？
    Bootstrap 是一個流行的開源框架，主要用於快速開發響應式和移動優先的網站。
    它提供了許多預建的樣式和組件，如按鈕、表單、導航欄等，讓開發者能夠輕鬆設計美觀的界面。
Carousel 橫幅跑馬燈
    https://www.w3schools.com/bootstrap5/bootstrap_carousel.php
    <!-- Carousel -->
    <div id="demo" class="carousel slide" data-bs-ride="carousel">

        <!-- Indicators/dots -->  下面的可點擊橫條
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#demo" data-bs-slide-to="0" class="active"></button>
            <button type="button" data-bs-target="#demo" data-bs-slide-to="1"></button>
            <button type="button" data-bs-target="#demo" data-bs-slide-to="2"></button>
        </div>

        <!-- The slideshow/carousel -->  圖片與大小設置
        <div class="carousel-inner">
            <div class="carousel-item active">
              <img src="la.jpg" alt="Los Angeles" class="d-block w-100">
            </div>
            <div class="carousel-item">
              <img src="chicago.jpg" alt="Chicago" class="d-block w-100">
            </div>
            <div class="carousel-item">
              <img src="ny.jpg" alt="New York" class="d-block w-100">
            </div>
        </div>

        <!-- Left and right controls/icons -->  左右的箭頭
        <button class="carousel-control-prev" type="button" data-bs-target="#demo" data-bs-slide="prev">
            <span class="carousel-control-prev-icon"></span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#demo" data-bs-slide="next">
            <span class="carousel-control-next-icon"></span>
        </button>
    </div>

Modals 彈跳視窗