HTML是什麼？
    HTML 的全名是 HyperText Markup Language（超文本標記語言），它主要用來定義網頁的結構和內容。
    想像一下 HTML 就像是建造房子的框架和結構，決定哪些部分是標題、段落、圖片、鏈接等。
基本框架
<!DOCTYPE html>
    文檔類型聲明，用於告訴瀏覽器這個HTML文件使用的是哪種HTML標準。
    用途：
        1.標識HTML版本：<!DOCTYPE html> 指定了文檔使用HTML5標準。這是目前最新的HTML標準，支持許多現代特性和API。
        2.啟用標準模式：這個聲明使瀏覽器進入“標準模式”，確保網頁在不同瀏覽器中的顯示效果一致，避免了某些瀏覽器的怪異模式（quirks mode），從而提高了網頁的兼容性。
<html>、<head> 和 <body>
    HTML文檔的基本結構標籤，各自扮演著不同的角色。
    1. <html>
        用途：標識整個HTML文檔的開始，並告訴瀏覽器這是一個HTML文件。它是所有其他元素的根元素。
    2. <head>
        用途：包含有關文檔的元數據（metadata），如標題、字元集、樣式表、腳本等。這些信息不會顯示在頁面內容中，但對瀏覽器和搜尋引擎等是重要的。
    3. <body>
        用途：包含文檔的可見內容，所有用戶在瀏覽器中看到的內容，如文本、圖片、按鈕等，都放在這裡。
    小結
        <!DOCTYPE html>：指定文檔類型。
        <html>：根元素，包裹整個HTML文檔。
        <head>：包含元數據和其他信息。
        <body>：包含所有可見內容。
        這種結構是撰寫HTML文檔的基本框架。
<h1>、<p>和<a>
    <h1>：這是一個標題標籤，h1表示最大號的標題。
    <p>：這是一個段落標籤，用來表示文字段落。
    <a>：這是一個鏈接標籤，href屬性告訴它要鏈接到哪個網址。
<title>
    顯示在瀏覽器標籤的名稱。
    <head>
    <title>標題名</title>
    </head>
<link> 
    是HTML中的一個標籤，用於在文檔中鏈接到外部資源，通常用於連接CSS樣式表，但也可以用於其他類型的資源。

    用途：
        連接CSS樣式表：最常見的用途是引入外部CSS文件，以便為HTML頁面應用樣式。
        其他資源：可以用於鏈接圖標、網頁的RSS源、字型等。
    組成部分：
         rel：指定與被鏈接資源的關係。例如，rel="stylesheet" 表示這是一個樣式表。
        href：指定資源的URL或路徑。例如，href="css/style.css" 指向一個CSS文件。
        type：指定資源的類型。對於CSS，通常設置為 type="text/css"（在HTML5中可選）。
        media：可選屬性，用於指定樣式表應用的媒介類型，例如 media="screen" 只在屏幕上應用。

meta標籤
    提供關於HTML文件的元資料（metadata）
        1.字元集：指定文件使用的字元編碼，例如 <meta charset="UTF-8">。
        2.頁面描述：提供網頁的簡短描述，通常用於搜尋引擎結果頁，例如 <meta name="description" content="網頁的描述">。
        3.關鍵詞：指定與網頁相關的關鍵詞，幫助搜尋引擎理解內容（雖然現在許多搜尋引擎不再重視此標籤）。
        4.作者資訊：標識網頁的作者，例如 <meta name="author" content="作者姓名">。
        5.視口設定：在響應式設計中，設置視口屬性，例如 <meta name="viewport" content="width=device-width, initial-scale=1.0">。
charset 字元集  
    “字元集”（Character Set）的縮寫，指的是一種用於將字元映射到特定數值的編碼方式。字元集定義了電腦如何將數字表示的內容轉換為可讀的字元。
    <meta charset="UTF-8">意思是指定文檔的字元編碼為 UTF-8
    UTF-8 是一種能夠表示世界上幾乎所有字元的編碼方式，包括中文、日文、韓文等多種語言字元。
    更多詳情
        用途：
            1.確保正確顯示：透過指定字元編碼，瀏覽器能夠正確解讀和顯示頁面中的文字，避免出現亂碼。
            2.支持多語言：UTF-8 支持多種語言和符號，使得網頁能夠被全球用戶訪問，而不必擔心字元顯示問題。
            3.SEO 優化：使用統一的編碼方式可以提高搜尋引擎對頁面內容的理解，從而有助於搜尋引擎優化（SEO）。
        如果沒有使用
            1.亂碼：瀏覽器可能使用預設字元編碼（如 ISO-8859-1 或其他編碼）來解析頁面內容，導致文本顯示為亂碼，特別是中文或其他非拉丁字母的字元。
            2.多語言支持問題：如果網頁包含多種語言字元，缺少字元編碼聲明可能會使某些字元無法正確顯示，從而影響用戶體驗。
            3.搜尋引擎問題：搜尋引擎在索引網頁內容時，可能因為字元編碼不明確而無法正確解析，從而影響網頁的可見性和排名。
            4.用戶體驗差：訪問者可能會因為無法正確閱讀網頁內容而感到困惑或不滿，從而降低他們對網站的信任感。
        其他常用的字元集
            1.ISO-8859-1（又稱 Latin-1）：主要用於西歐語言。
            2.Windows-1252：與 ISO-8859-1 類似，但增加了額外的字元，常用於 Windows 系統。
            3.UTF-16：支持所有 Unicode 字元，通常用於某些特定的應用和環境。
            4.ASCII：只包含基本的英文字元（0-127），通常用於簡單的文本文件。
            5.GB2312 / GBK / GB18030：用於簡體中文字元的編碼。
img 圖片
    <img alt="圖片來源" src="替代文字"/>
    src：指定圖片的來源（URL）
    alt：這是“替代文字”（alternative text）的屬性，提供了一個圖片的描述。當圖片無法顯示時，瀏覽器會顯示這段文字，以幫助用戶理解圖片的內容。
    
    舉例
        <img alt="Read Lantern logo" src="images/rl_logo.png"/>
        images/rl_logo.png 為指定資料夾的rl_logo圖片

網站建立步驟(個人見解)
    1.先建立html:5，並在head裡設定好title、link、keyword等。
    2.觀察與構思網頁的分區，並從頭到尾從上到下分隔開來。
      如果有左右分隔的區塊，以在某區塊再次分割的方式做出。
    3.幫分隔得區塊取名，header、div、article、footer沒有差距。
      以自己方便修改、好懂為主，並在後面設立ID以更好辨認

CSS 是什麼？
    CSS 的全名是 Cascading Style Sheets（層疊樣式表），它主要用來設計和美化網頁的外觀。
    你可以用 CSS 改變文字的顏色、大小、背景顏色、間距等。CSS 就像是裝飾這個房子的油漆、家具和裝飾品。
